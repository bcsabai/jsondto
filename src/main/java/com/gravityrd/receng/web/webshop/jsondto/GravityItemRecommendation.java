package com.gravityrd.receng.web.webshop.jsondto;

import com.gravityrd.receng.web.webshop.jsondto.facet.FacetResponse;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonInclude;

import java.util.Arrays;
import java.util.Map;

/**
 * The list of items recommended to a user.
 */
@SuppressWarnings({ "WeakerAccess", "unused" })
@JsonIgnoreProperties(ignoreUnknown = true)
public class GravityItemRecommendation {

	/**
	 * The recommendationId is generated by the recommendation engine.  See {@link GravityEvent#recommendationId }.
	 */
	public String recommendationId;

	/**
	 * The list of items. This is populated only if the scenario specifies to do so, otherwise this is null.
	 * The items in this list only have the NameValues specified by the scenario.
	 * The list of NameValues specified by the scenario can be overridden by the {@link GravityRecommendationContext#resultNameValues } on a per request basis.
	 */
	public GravityItem[] items;

	/**
	 * The identifiers of the recommended items.
	 */
	public String[] itemIds;

	public double[] predictionValues;

	public GravityNameValue[] outputNameValues;

	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public Map<String, FacetResponse> facets;
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public Long totalResults;
	@JsonInclude(JsonInclude.Include.NON_EMPTY)
	public Long took;

	public String toString() {
		return "GravityItemRecommendation{" + "recommendationId='" + recommendationId + '\'' +
				", items=" + Arrays.toString(items) +
				", itemIds=" + Arrays.toString(itemIds) +
				", predictionValues=" + Arrays.toString(predictionValues) +
				", outputNameValues=" + Arrays.toString(outputNameValues) +
				", facets=" + facets +
				", totalResults=" + totalResults +
				", took=" + took +
				'}';
	}

	@JsonIgnore
	@SuppressWarnings("unchecked")
	public <F extends FacetResponse> F getFacet(String name) {
		return (F) facets.get(name);
	}
}
